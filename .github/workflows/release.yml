name: Build and Release

on:
  push:
    branches:
      - master
    tags:
      - 'RELEASE_V*'

jobs:
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Set up Qt (macOS)
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.5.0'
          cache: true
          cache-key-prefix: ${{ runner.os }}-Qt-6.5.0
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build (macOS)
        run: |
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=ON
          cmake --build build -- -v
      - name: Create DMG
        run: |
          # Create a temporary directory for DMG contents
          mkdir -p dmg_temp
          cp -R build/MonitorSwitch.app dmg_temp/
          
          # Create a symbolic link to Applications folder
          ln -s /Applications dmg_temp/Applications
          
          # Create the DMG
          hdiutil create -volname "MonitorSwitch" -srcfolder dmg_temp -ov -format UDZO build/MonitorSwitch.dmg
          
          # Verify the DMG was created
          ls -la build/MonitorSwitch.dmg
      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: MonitorSwitch-macOS
          path: |
            build/MonitorSwitch.dmg

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Set up Qt (Windows)
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.5.0'
          cache: true
          cache-key-prefix: ${{ runner.os }}-Qt-6.5.0
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build (Windows)
        run: |
          .\build.bat
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: MonitorSwitch-Windows
          path: build\Release\MonitorSwitch.exe

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Qt (Linux)
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.5.0'
          cache: true
          cache-key-prefix: ${{ runner.os }}-Qt-6.5.0
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libx11-dev libudev-dev
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build (Linux)
        run: |
          pwd
          ls -la ./src/
          chmod +x ./build.sh
          ./build.sh
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: MonitorSwitch-Linux
          path: build/MonitorSwitch

  release:
    if: startsWith(github.ref, 'refs/tags/') || (github.event_name == 'release' && github.event.action == 'created')
    needs: [build-macos, build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: List downloaded files
        run: ls -R artifacts

      - name: Create GitHub Release and Upload Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Use the tag name as the release name
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          # Set to true for prerelease, false for final release
          prerelease: false
          # Path to files to attach to the release
          files: |
            artifacts/MonitorSwitch.dmg
            artifacts/MonitorSwitch.exe
            artifacts/MonitorSwitch
